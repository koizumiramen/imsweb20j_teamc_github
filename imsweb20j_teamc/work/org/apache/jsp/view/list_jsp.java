/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.32
 * Generated at: 2023-06-28 05:30:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.view;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import bean.Inquiry;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/common/adminFooter.jsp", Long.valueOf(1687914400188L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bean.Inquiry");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.time.LocalDateTime");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Inquiry> inquiry_list = (ArrayList<Inquiry>) request.getAttribute("inquiry_list");

	String sortString = (String) request.getAttribute("sortString");

	String message = "";
	int todayNo = 0;
	LocalDateTime ldt = LocalDateTime.now();
	DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");
	String todayStr = ldt.format(dtf);

	for (Inquiry inquiries : inquiry_list) {
		StringBuilder sb = new StringBuilder();
		String strDate = inquiries.getDate();
		if (todayStr.substring(0, 4).equals(strDate.substring(0, 4))
				&& todayStr.substring(5, 7).equals(strDate.substring(5, 7))
				&& todayStr.substring(8, 10).equals(strDate.substring(8, 10))) {
			todayNo++;
		}
	}
	message = "本日のお問い合わせ件数は" + todayNo + "件です。";

	request.setAttribute("message", message);

	int replyNo = 0;
	for(Inquiry inquiries : inquiry_list){
		if(inquiries.getStatus() == 1){
			replyNo++;
		}
	}

	//返信率
	double r = 100*replyNo/inquiry_list.size();
	int replyPer = (int)r;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>お問い合わせ管理システム「Ose-t」</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("tr.list:hover td {\r\n");
      out.write("\tbackground: #e6e6e6;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div.nButton {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\toutline: 0;\r\n");
      out.write("\tcolor: #FFFFFF;\r\n");
      out.write("\tbackground-color: #FF8866;\r\n");
      out.write("\tborder-color: #FF8866;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tfont-weight: 400;\r\n");
      out.write("\tline-height: 1.5;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tborder: 1px solid transparent;\r\n");
      out.write("\tpadding: 6px 12px;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tborder-radius: .25rem;\r\n");
      out.write("\ttransition: color .15s ease-in-out, background-color .15s ease-in-out,\r\n");
      out.write("\t\tborder-color .15s ease-in-out, box-shadow .15s ease-in-out; : hover {\r\n");
      out.write("\tcolor : #fff;\r\n");
      out.write("\tbackground-color: #FF8866;\r\n");
      out.write("\tborder-color: #FF8866;\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\"\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("　jQuery(function($) {\r\n");
      out.write("\r\n");
      out.write("\t  //data-hrefの属性を持つtrを選択しclassにlistを付加\r\n");
      out.write("\t  $('tr[data-href]').addClass('list')\r\n");
      out.write("\r\n");
      out.write("\t    //クリックイベント\r\n");
      out.write("\t    .click(function(e) {\r\n");
      out.write("\r\n");
      out.write("\t      //e.targetはクリックした要素自体、それがa要素以外であれば\r\n");
      out.write("\t      if(!$(e.target).is('a')){\r\n");
      out.write("\r\n");
      out.write("\t        //その要素の先祖要素で一番近いtrの\r\n");
      out.write("\t        //data-href属性の値に書かれているURLに遷移する\r\n");
      out.write("\t        window.location = $(e.target).closest('tr').data('href');}\r\n");
      out.write("\t  });\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<!-- ヘッダー部分 -->\r\n");
      out.write("\t<div header>\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/common/adminHeader.jsp", out, false);
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t<div style=\"margin-bottom: 150px\">\r\n");
      out.write("\r\n");
      out.write("\t\t<table style=\"margin: auto\" ; width=\"90%\";>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"width: 1100px\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<form method=\"POST\" name=\"date\"\r\n");
      out.write("\t\t\t\t\t\taction=\"");
      out.print(request.getContextPath());
      out.write("/list\">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=sort value=date>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t<form method=\"POST\" name=\"category\"\r\n");
      out.write("\t\t\t\t\t\taction=\"");
      out.print(request.getContextPath());
      out.write("/list\">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=sort value=category>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t<form method=\"POST\" name=\"status\"\r\n");
      out.write("\t\t\t\t\t\taction=\"");
      out.print(request.getContextPath());
      out.write("/list\">\r\n");
      out.write("\t\t\t\t\t\t<input type=hidden name=sort value=status>\r\n");
      out.write("\t\t\t\t\t</form> <select name=\"select\" onChange=\"location.href=value;\">\r\n");
      out.write("\t\t\t\t\t\t<option value=\"#\">");
      out.print(sortString);
      out.write("</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"javascript:document.date.submit()\">受信日時</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"javascript:document.category.submit()\">項目</option>\r\n");
      out.write("\t\t\t\t\t\t<option value=\"javascript:document.status.submit()\">返信状況</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\r\n");
      out.write("\t\t<table style=\"margin: auto\" ; width=\"90%\" ; table-layout=\"fixed;\"\r\n");
      out.write("\t\t\tcellpadding=\"9\">\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<th style=\"background-color: #80bd9e; width: 200px\">受信日時</th>\r\n");
      out.write("\t\t\t\t<th style=\"background-color: #80bd9e; width: 100px\">名前</th>\r\n");
      out.write("\t\t\t\t<th style=\"background-color: #80bd9e; width: 220px\">項目</th>\r\n");
      out.write("\t\t\t\t<th style=\"background-color: #80bd9e; width: 370px\">内容</th>\r\n");
      out.write("\t\t\t\t<th style=\"background-color: #80bd9e; width: 90px\">返信状況</th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				if (inquiry_list != null) {
					for (Inquiry inquiries : inquiry_list) {
						StringBuilder sb = new StringBuilder();
						String strDate = inquiries.getDate();
			
      out.write("\r\n");
      out.write("\t\t\t<tr class=\"list\"\r\n");
      out.write("\t\t\t\tdata-href=\"");
      out.print(request.getContextPath());
      out.write("/inquiryReplyForm?inquiry_id=");
      out.print(inquiries.getInquiry_id());
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">");
      out.print(sb.append(strDate.substring(0, 4) + "年" + strDate.substring(5, 7) + "月"
							+ strDate.substring(8, 10) + "日　" + strDate.substring(11, 16)));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t");

						if (inquiries.getName().length() <= 6) {
					
      out.write(' ');
      out.print(inquiries.getName());
      out.write(' ');

 	} else {
 
      out.write(' ');
      out.print(inquiries.getName().substring(0, 6));
      out.write("... ");

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">");
      out.print(inquiries.getCategory());
      out.write("</td>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">\r\n");
      out.write("\t\t\t\t\t");

						if (inquiries.getContents().length() <= 20) {
					
      out.write(' ');
      out.print(inquiries.getContents());
      out.write(' ');

 	} else {
 
      out.write(' ');
      out.print(inquiries.getContents().substring(0, 20));
      out.write("... ");

 	}
 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");

					if (inquiries.getStatus() == 0) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\"><div class=\"nButton\">\r\n");
      out.write("\t\t\t\t\t\t<strong>未返信</strong>\r\n");
      out.write("\t\t\t\t\t</div> ");

 	} else {
 
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("div.oButton {\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\toutline: 0;\r\n");
      out.write("\tcolor: #e6e2cf;\r\n");
      out.write("\tbackground-color: #FF9977;\r\n");
      out.write("\tborder-color: #FF8866;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tfont-weight: 400;\r\n");
      out.write("\tline-height: 1.5;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tborder: 1px solid transparent;\r\n");
      out.write("\tpadding: 6px 12px;\r\n");
      out.write("\tfont-size: 12px;\r\n");
      out.write("\tborder-radius: .25rem;\r\n");
      out.write("\ttransition: color .15s ease-in-out, background-color .15s ease-in-out,\r\n");
      out.write("\t\tborder-color .15s ease-in-out, box-shadow .15s ease-in-out; : hover {\r\n");
      out.write("\tcolor : #e6e2cf;\r\n");
      out.write("\tbackground-color: #FF9977;\r\n");
      out.write("\tborder-color: #FF9977;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\"><div class=\"oButton\">返信済み</div></td>\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
				} else {
			
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">&nbsp;</td>\r\n");
      out.write("\t\t\t\t<td style=\"text-align: center;\">&nbsp;</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- フッター部分 -->\r\n");
      out.write("\t<div footer>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<style>\r\n");
      out.write("body {\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("footer {\r\n");
      out.write("\tfont-family: 游ゴシック, 游ゴシック体;\r\n");
      out.write("\tbackground: rgba(4, 192, 31, 0.3);\r\n");
      out.write("\theight: 90px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* ボタン全体 */\r\n");
      out.write("#page_top {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\toutline: 0;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcursor: pointer;\r\n");
      out.write("\tpadding: 10px 0;\r\n");
      out.write("\tvertical-align: top;\r\n");
      out.write("\tborder-radius: 3px;\r\n");
      out.write("\tborder: 1px solid transparent;\r\n");
      out.write("\ttransition: all .3s ease;\r\n");
      out.write("\tbackground: #fff;\r\n");
      out.write("\tborder-color: #e8e8e8;\r\n");
      out.write("\tcolor: #000;\r\n");
      out.write("\tfont-weight: 600;\r\n");
      out.write("\ttext-transform: uppercase;\r\n");
      out.write("\tline-height: 16px;\r\n");
      out.write("\tfont-size: 11px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\theight: 20px;\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("\tpadding-bottom: 5px;\r\n");
      out.write("\tpadding-top: 10px;\r\n");
      out.write("\tmargin-top: 10px;\r\n");
      out.write("\tmargin-bottom: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* Font Awesome */\r\n");
      out.write("#page_top::before {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tmargin-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#page_top:hover {\r\n");
      out.write("\tbackground: #e8e8e8;\r\n");
      out.write("\tcolor: #3d3d3d;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<footer>\r\n");
      out.write("\t\t<div class=\"container\" style=\"text-align: center\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t<a href=\"#\" id=\"page_top\">ページトップ</a> <br>© 2023\r\n");
      out.write("\t\t\tKandaEnglishSchool. All Right Reserved.\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
